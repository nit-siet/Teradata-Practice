/********** CustomerSegment.bteq **********/


----Loging in to the account---
.LOGON 192.168.211.128/DBC,DBC;

--CHANGING DATABASE--
DATABASE FINANCIAL;

--Creting volatile table -------
CREATE VOLATILE TABLE CUSTOMER_FIRST_ACCOUNT 
(
CUSTOMER_ID INTEGER,
FIRST_ACCOUNT_DT DATE
)
UNIQUE PRIMARY INDEX(CUSTOMER_ID)
ON COMMIT PRESERVE ROWS;


--Identifying the customer first account and inserting into the CUSTOMER_FIRST_ACCOUNT table -----
INSERT INTO CUSTOMER_FIRST_ACCOUNT
SELECT a.Cust_id,a.account_open_dt FROM 
(SELECT cust_id,account_id,account_open_dt, rank() Over(PARTITION BY cust_id ORDER BY account_open_dt)r FROM accounts)a
WHERE a.r=1;

---Creating vloatile table Customer Accounts-----
CREATE VOLATILE TABLE CUSTOMER_ACCOUNTS
(
CUSTOMER_ID INTEGER,
SAVING_BALANCE INTEGER,
CREDIT_BALANCE INTEGER,
MORTGAGE_BALANCE INTEGER
)
UNIQUE PRIMARY INDEX(CUSTOMER_ID)
ON COMMIT PRESERVE ROWS;


----Inserting the rows into the customer_account table ----
INSERT INTO CUSTOMER_ACCOUNTS
SELECT a.cust_id,
Sum(CASE WHEN b.account_type_desc='Saving'
	 THEN A.ACCOUNT_BALANCE
	END) SAVINGS_BALANCE,
Sum(CASE WHEN b.account_type_desc='CreditCard'
	 THEN A.ACCOUNT_BALANCE 
	END)CREDIT_BALANCE ,
Sum(CASE WHEN b.account_type_desc='Mortgage'
	 THEN A.ACCOUNT_BALANCE 
	END) MORTGAGE_BALANCE
FROM accounts a INNER JOIN account_type b ON (a.account_type_cd=b.account_type_cd)
WHERE b.account_type_desc IN ('Saving','CreditCard','Mortgage')
GROUP BY A.CUST_ID;



SELECT * FROM CUSTOMER_ACCOUNTS;

-----deleting all records from CUSTOMER_SEGMENT table ------
DELETE FROM CUSTOMER_SEGMENT;

INSERT INTO CUSTOMER_SEGMENT
SELECT B.CUSTOMER_ID,A.CUSTOMER_FNAME,A.CUSTOMER_LNAME,
CASE WHEN C.FIRST_ACCOUNT_DT BETWEEN CURRENT_DATE AND ADD_MONTHS(CURRENT_DATE,-3)
	 THEN 'N'
	 ELSE 'E'
END Customer_Type,
CASE WHEN B.SAVING_BALANCE>500000 OR B.CREDIT_BALANCE>300000 OR B.MORTGAGE_BALANCE>5000000
	 THEN 'High-Networth'
	 WHEN B.SAVING_BALANCE BETWEEN 200000 AND 500000 OR B.CREDIT_BALANCE BETWEEN 100000 AND 300000 OR B.MORTGAGE_BALANCE BETWEEN 1000000 AND 5000000
	 THEN 'Medium-Networth'
	 WHEN B.SAVING_BALANCE<200000 OR B.CREDIT_BALANCE<100000 OR B.MORTGAGE_BALANCE>1000000
	 THEN 'Low-Networth'
	 ELSE ''
END Customer_Segment_Value,
CURRENT_DATE Segment_Start_Dt,
CAST('9999-12-31' AS DATE) Segment_End_Dt
FROM 
CUSTOMER_NEW A INNER JOIN CUSTOMER_ACCOUNTS B ON (A.CUSTOMER_ID=B.CUSTOMER_ID)
INNER JOIN CUSTOMER_FIRST_ACCOUNT C ON (A.CUSTOMER_ID=C.CUSTOMER_ID);


SELECT * FROM CUSTOMER_SEGMENT;
.LOGOFF;
.QUIT;